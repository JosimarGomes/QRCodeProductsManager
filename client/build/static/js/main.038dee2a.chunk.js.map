{"version":3,"sources":["design-system/index.js","components/Header/styles.js","components/Header/index.js","design-system/components/Button/index.js","pages/dashboard/styles.js","design-system/components/Alerts/styles.js","design-system/components/Modal/styles.js","design-system/components/Modal/index.js","design-system/components/Alerts/index.js","design-system/components/Table/styles.js","design-system/components/Table/index.js","components/ProductFormModal/styles.js","services/auth.js","services/api.js","design-system/components/Tag/styles.js","redux/reducers/products.js","components/ProductFormModal/index.js","utils/currency.js","libs/serialCode.js","components/QRCodeModal/index.js","components/ProductsHistoricModal/styles.js","components/ProductsHistoricModal/index.js","utils/date.js","components/ProductsTable/styles.js","components/ProductsTable/index.js","pages/dashboard/index.js","pages/products/styles.js","components/ProductsQRCodeTable/style.js","components/ProductsQRCodeTable/index.js","pages/products/index.js","router.js","redux/reducers/index.js","redux/sagas/products.js","redux/sagas/index.js","config/redux.js","App.js","index.js"],"names":["BOX_SHADOW","HeaderContainer","styled","div","MenuItem","span","Header","props","to","ButtonDefault","button","ButtonPrimary","Container","ContainerButton","SuccessIcon","CheckCircleOutlined","DangerIcon","ExclamationCircleOutlined","InfoIcon","Message","Content","size","ContentChildren","ModalTitle","ModalFooter","BtnPrimary","BtnDefault","Modal","children","visible","onCancel","title","okButton","cancelButton","onOk","loadingButton","createPortal","onClick","event","stopPropagation","LoadingOutlined","document","getElementById","Alert","handlerVisibility","type","message","getIconByType","Confirm","onConfirm","loading","Table","table","TrTable","thead","tr","TdTable","td","ThTable","th","PreLoadContainer","LoadingIcon","NoDataIcon","ExceptionOutlined","NoDataText","h2","TableDefault","columns","data","dataKey","length","map","column","idx","key","item","itemKey","render","Input","input","SmallInput","InputGroup","Form","form","TextArea","textarea","Label","label","SerialCodeContainer","SerialCodeGroup","DeleteIcon","DeleteOutlined","SerialCodeContent","BarCodeIcon","BarcodeOutlined","TOKEN_KEY","BASE_URL_API","api","axios","create","baseURL","interceptors","request","use","a","config","token","localStorage","getItem","headers","Authorization","TagDefault","Types","LOAD","LOAD_SUCCESS","LOAD_FAILED","initialState","products","error","loadProducts","getProducts","state","productsReducer","isLoading","mapDispatchToProps","connect","editValues","titleForm","useState","values","setValues","setLoading","alertInfos","setAlertInfos","changeValues","fieldName","value","formateInputValues","inputsValues","formatedValues","toString","replace","ptBrToCurrencyNumber","Api","put","show","useEffect","currencyToFormPtBr","onChange","target","name","defaultValue","description","serialCodes","serial","filter","serialCode","removeSerial","evt","preventDefault","newCode","Date","now","push","PlusCircleOutlined","QRCodeModal","ProductInfo","ProducsHistoricModal","product","productHistorics","setProductHistorics","get","id","fetchProductHistorics","historic","userId","date","toLocaleString","TableContainer","ProductName","ProductDescription","TagSerial","Button","showFormEditProduct","setShowFormEditProduct","showQRCodemodal","setShowQRCodeModal","qrCodeModalProduct","setQRCodeModalProduct","qrCodeModalValue","setQRCodeModalValue","showModalProductHistoric","setShowModalProductHistoric","historicModalProduct","setHistoricModalProduct","formEditValues","setFormEditValues","confirmModal","setConfirmModal","delete","handleDeleteProduct","onConfirmDeleteProduct","Intl","NumberFormat","style","currency","format","handlerQRCodeModal","handleHistoricProduct","LineChartOutlined","handleEditProduct","FormOutlined","flag","Dashboard","showFormNewProduct","setShowFormNewProduct","handleVisibilityFormNewProduct","visibility","QRCodeInfo","SerialCodeInfo","ProductsQRCodeTable","setSerialCodes","loadingProducts","setLoadingProducts","sCodes","flatMap","fetchProducts","Products","Routes","path","exact","component","Product","combineReducers","action","payload","sagasProducts","PRODUCTS","call","result","takeLatest","rootSaga","all","fork","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducers","applyMiddleware","run","rootSagas","App","className","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.038dee2a.chunk.js","sourcesContent":["// BORDER WIDTH\nexport const BORDER_WIDTH_NONE = 0;\nexport const BORDER_WIDTH_S = 1;\nexport const BORDER_WIDTH_M = 2;\nexport const BORDER_WIDTH_L = 4;\n\n// BORDER RADIUS\nexport const BORDER_RADIUS_S = 4;\nexport const BORDER_RADIUS_M = 8;\nexport const BORDER_RADIUS_L = 16;\n\n// COLORS\nexport const COLOR_BRAND_PRIMARY = '#0576FF';\nexport const COLOR_SUPORTE_PRIMARY = '#0576FF';\nexport const COLOR_SUPORTE_PRIMARY_LIGHTEST = '#e6f7fe';\nexport const COLOR_SUPORTE_SUCCESS = '#87d068';\nexport const COLOR_SUPORTE_SUCCESS_LIGHTEST = '#f6fced';\nexport const COLOR_SUPORTE_WARNING = '#F9CD47';\nexport const COLOR_SUPORTE_DANGER = '#F94770';\nexport const COLOR_NEUTRAL_BLACK = '#19191C';\nexport const COLOR_NEUTRAL_DARKEST = '#4C4F59';\nexport const COLOR_NEUTRAL_DARK = '#8B909E';\nexport const COLOR_NEUTRAL_MEDIUM = '#CBCED6';\nexport const COLOR_NEUTRAL_LIGHT = '#EDEDED';\nexport const COLOR_NEUTRAL_LIGHTEST = '#F7F9F8';\nexport const COLOR_NEUTRAL_WHITE = '#F5F6F5';\n\n// SPACING\nexport const SPACING_STACK_XXXS = 4;\nexport const SPACING_STACK_XXS = 8;\nexport const SPACING_STACK_XS = 16;\nexport const SPACING_STACK_S = 24;\nexport const SPACING_STACK_M = 32;\nexport const SPACING_STACK_L = 40;\nexport const SPACING_STACK_XL = 48;\nexport const SPACING_STACK_XXL = 56;\nexport const SPACING_STACK_XXXL = 64;\n\n// FONTS\nexport const FONT_SIZE_S = '1em';\nexport const FONT_SIZE_XS = '0.9em';\nexport const FONT_SIZE_XXS = '0.8em';\nexport const FONT_SIZE_M = '1.3em';\nexport const FONT_SIZE_L = '2em';\nexport const FONT_SIZE_XL = '2.5em';\n\n// SHADOWS\nexport const BOX_SHADOW = '0 5px 10px 2px rgba(195,192,192,.5)';\nexport const SHADOW = 'rgba(0, 0, 0, 0.2)';","import styled from 'styled-components';\nimport {\n    SPACING_STACK_XS,\n    COLOR_NEUTRAL_LIGHT,\n    COLOR_NEUTRAL_LIGHTEST,\n    BORDER_WIDTH_S,\n    COLOR_SUPORTE_PRIMARY\n} from 'design-system'\n\nexport const HeaderContainer = styled.div`\n    background: ${COLOR_NEUTRAL_LIGHT};\n    display: flex;\n    justify-content: center;\n    border-bottom: ${BORDER_WIDTH_S}px solid #FFF;\n    & a {\n        padding: ${SPACING_STACK_XS}px 0px;\n        text-decoration: none;\n    }\n`;\n\nexport const MenuItem = styled.span`\n    padding: ${SPACING_STACK_XS}px;\n    color: ${COLOR_SUPORTE_PRIMARY};\n    &:hover {\n        background: ${COLOR_NEUTRAL_LIGHTEST};\n        cursor: pointer;\n    }\n    \n`;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    HeaderContainer,\n    MenuItem,\n} from './styles';\n\nexport default function Header(props) {\n    return (\n        <HeaderContainer>\n            <Link to=\"/\">\n                <MenuItem>DASHBOARD</MenuItem>\n            </Link>\n            <Link to=\"/products\">\n                <MenuItem>QR-CODES</MenuItem>\n            </Link>\n        </HeaderContainer>\n    )\n}","import styled from 'styled-components';\nimport {\n    COLOR_NEUTRAL_LIGHT,\n    COLOR_NEUTRAL_DARK,\n    BORDER_RADIUS_S,\n    COLOR_SUPORTE_PRIMARY,\n    COLOR_NEUTRAL_WHITE,\n    FONT_SIZE_XS,\n    SPACING_STACK_XS,\n    SPACING_STACK_XXS\n} from 'design-system';\n\nexport const ButtonDefault = styled.button`\n    color: ${COLOR_NEUTRAL_DARK};\n    background-color: ${COLOR_NEUTRAL_LIGHT};\n    border: none;\n    border-radius: ${BORDER_RADIUS_S}px;\n    padding: ${SPACING_STACK_XXS}px ${SPACING_STACK_XS}px;\n    cursor: pointer;\n    font-size: ${FONT_SIZE_XS};\n`;\n\nexport const ButtonPrimary = styled(ButtonDefault)`\n    background-color: ${COLOR_SUPORTE_PRIMARY};\n    color: ${COLOR_NEUTRAL_WHITE};\n`;","import styled from 'styled-components';\nimport {\n    SPACING_STACK_M,\n} from 'design-system';\n\nexport const Container = styled.div`\n    width: 100%;\n    padding: 0px ${SPACING_STACK_M}px;\n`;\n\nexport const ContainerButton = styled.div`\n    margin-top: ${SPACING_STACK_M}px;\n`;","import styled from 'styled-components';\nimport {\n    CheckCircleOutlined,\n    ExclamationCircleOutlined,\n} from '@ant-design/icons';\nimport {\n    COLOR_SUPORTE_SUCCESS,\n    COLOR_SUPORTE_DANGER,\n    COLOR_SUPORTE_PRIMARY,\n    FONT_SIZE_L,\n    COLOR_NEUTRAL_DARK,\n    SPACING_STACK_XXS\n} from 'design-system';\n\nexport const SuccessIcon = styled(CheckCircleOutlined)`\n    color: ${COLOR_SUPORTE_SUCCESS};\n    font-size: ${FONT_SIZE_L};\n`;\n\nexport const DangerIcon = styled(ExclamationCircleOutlined)`\n    color: ${COLOR_SUPORTE_DANGER};\n    font-size: ${FONT_SIZE_L};\n`;\n\nexport const InfoIcon = styled(ExclamationCircleOutlined)`\n    color: ${COLOR_SUPORTE_PRIMARY};\n    font-size: ${FONT_SIZE_L};\n`;\n\nexport const Message = styled.span`\n    color: ${COLOR_NEUTRAL_DARK};\n    margin-left: ${SPACING_STACK_XXS}px;\n`;\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;","import styled from 'styled-components';\nimport {\n    BOX_SHADOW,\n    SHADOW,\n    SPACING_STACK_S,\n    SPACING_STACK_XS,\n    SPACING_STACK_XXS,\n    BORDER_RADIUS_S,\n    COLOR_NEUTRAL_LIGHT,\n    COLOR_NEUTRAL_LIGHTEST,\n    COLOR_NEUTRAL_DARK,\n} from 'design-system';\n\nimport {\n    ButtonPrimary as BtnPrimary,\n    ButtonDefault as BtnDefault\n} from 'design-system/components/Button';\n\nfunction getSizeModal({ size }) {\n    if(size === 'medium') {\n        return '60vw';\n    }\n\n    if(size === 'large') {\n        return '80vw';\n    }\n\n    return '40vw';\n}\n\nexport const Container = styled.div`\n    background: ${SHADOW};\n    position: fixed;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    margin: auto;\n    box-shadow: ${BOX_SHADOW};\n    padding: ${SPACING_STACK_S}px;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n`;\n\nexport const Content = styled.div`\n    margin-top: ${SPACING_STACK_S}px;\n    background: ${COLOR_NEUTRAL_LIGHTEST};\n    width: ${getSizeModal};\n    max-height: 80vh;\n    box-shadow: ${BOX_SHADOW};\n    border-radius: ${BORDER_RADIUS_S}px;\n`;\n\nexport const ContentChildren = styled.div`\n    padding: ${SPACING_STACK_S}px;\n    max-height: 60vh;\n    overflow-y: auto;\n`;\n\nexport const ModalTitle = styled.div`\n    padding: ${SPACING_STACK_XS}px ${SPACING_STACK_S}px ${SPACING_STACK_XS}px ${SPACING_STACK_S}px;\n    text-align: left;\n    border-bottom: 1px solid ${COLOR_NEUTRAL_LIGHT};\n    color: ${COLOR_NEUTRAL_DARK}\n`;\n\nexport const ModalFooter = styled.div`\n    padding: ${SPACING_STACK_XS}px ${SPACING_STACK_S}px ${SPACING_STACK_XS}px ${SPACING_STACK_S}px;\n    text-align: right;\n    border-top: 1px solid ${COLOR_NEUTRAL_LIGHT};\n`;\n\nexport const ButtonPrimary = styled(BtnPrimary)`\n    margin-left: ${SPACING_STACK_XXS}px;\n`;\n\nexport const ButtonDefault = styled(BtnDefault)``;","import React from 'react';\nimport { createPortal } from 'react-dom';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport {\n    Container,\n    Content,\n    ContentChildren,\n    ModalTitle,\n    ModalFooter,\n    ButtonDefault,\n    ButtonPrimary\n} from './styles';\n\nexport default function Modal({\n    children, visible, onCancel, title, okButton, cancelButton,\nonOk, size, loadingButton }){  \n\n    function stopClickPropagation(event) {\n        event.stopPropagation();\n    }\n\n    if(!visible) {\n        return null;\n    }\n\n    return (\n        createPortal(\n            <Container onClick={onCancel}>\n                <Content onClick={stopClickPropagation} size={size}>\n                    {\n                        title && <ModalTitle>{title}</ModalTitle>\n                    }\n                    <ContentChildren>\n                        {children}\n                    </ContentChildren>\n                    <ModalFooter>\n                        <ButtonDefault onClick={onCancel} >\n                            { cancelButton || 'Cancelar' }\n                        </ButtonDefault>\n                        {\n                            typeof onOk === 'function' && (\n                                <ButtonPrimary onClick={onOk}>\n                                    {\n                                        loadingButton === true && (\n                                            <LoadingOutlined />\n                                        )\n                                    }\n                                    { okButton || 'Salvar' }\n                                </ButtonPrimary>\n                            )\n                        }\n                    </ModalFooter>\n                </Content>\n            </Container>,\n            document.getElementById('modal')\n        )\n    )\n}","import React from 'react';\nimport {\n    SuccessIcon,\n    DangerIcon,\n    InfoIcon,\n    Message,\n    Container\n} from './styles';\nimport Modal from '../Modal';\n\nexport function Alert({ visible, handlerVisibility, type, message }) {\n\n    function getIconByType(type) {\n        if (type === 'error') {\n            return <DangerIcon />\n        }\n    \n        return <SuccessIcon />\n    }\n\n    return (\n        <Modal\n            visible={visible}\n            onCancel={() => handlerVisibility(false)}\n            cancelButton=\"Ok\"\n        >\n            <Container>\n                { getIconByType(type) }\n                <Message>{ message }</Message>\n            </Container>\n        </Modal>\n    )\n}\n\nexport function Confirm({ visible, onConfirm, handlerVisibility, message, loading }) {\n\n    return (\n        <Modal\n            visible={visible}\n            onCancel={() => handlerVisibility(false)}\n            onOk={onConfirm}\n            cancelButton=\"Cancelar\"\n            okButton=\"Confirmar\"\n            loadingButton={loading}\n        >\n            <Container>\n                <InfoIcon />\n                <Message>{ message }</Message>\n            </Container>\n        </Modal>\n    )\n}","import styled from 'styled-components';\nimport { LoadingOutlined, ExceptionOutlined } from '@ant-design/icons';\nimport {\n    COLOR_NEUTRAL_LIGHT,\n    SPACING_STACK_XXS,\n    COLOR_NEUTRAL_DARK,\n    BORDER_WIDTH_S,\n    FONT_SIZE_XXS,\n    FONT_SIZE_XL,\n    COLOR_SUPORTE_PRIMARY\n} from 'design-system';\n\nexport const Table = styled.table`\n    width: 100%;\n    border-radius: 20px;\n`;\n\nexport const TheadTable = styled.thead`\n`;\n\nexport const TrTable = styled.tr`\n`;\n\nexport const TdTable = styled.td`\n    padding: ${SPACING_STACK_XXS}px;\n    border: ${BORDER_WIDTH_S}px solid ${COLOR_NEUTRAL_LIGHT};\n`;\n\nexport const ThTable = styled.th`\n    padding: ${SPACING_STACK_XXS}px;\n    border: ${BORDER_WIDTH_S}px solid ${COLOR_NEUTRAL_LIGHT};\n    background-color: ${COLOR_NEUTRAL_LIGHT};\n    font-weight: bold;\n    color: ${COLOR_NEUTRAL_DARK};\n    font-size: ${FONT_SIZE_XXS};\n    text-align: left;\n`;\n\nexport const PreLoadContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    width: 100%;\n    min-height: 50vh;\n`;\n\nexport const LoadingIcon = styled(LoadingOutlined)`\n    font-size: ${FONT_SIZE_XL};\n    color: ${COLOR_SUPORTE_PRIMARY}\n`;\n\nexport const NoDataIcon = styled(ExceptionOutlined)`\n    font-size: ${FONT_SIZE_XL};\n    color: ${COLOR_SUPORTE_PRIMARY};\n`;\n\nexport const NoDataText = styled.h2`\n    color: ${COLOR_NEUTRAL_DARK};\n`;","import React from 'react';\nimport {\n    TdTable,\n    Table,\n    ThTable,\n    TrTable,\n    PreLoadContainer,\n    LoadingIcon,\n    NoDataIcon,\n    NoDataText\n} from './styles';\n\nexport default function TableDefault({ columns, data, dataKey, loading }) {\n    \n    if (loading) {\n        return (\n            <PreLoadContainer>\n                <LoadingIcon />\n            </PreLoadContainer>\n        )\n    }\n\n    if (data.length === 0) {\n        return (\n            <PreLoadContainer>\n                <NoDataIcon />\n                <NoDataText>Nenhum registro encontrado</NoDataText>\n            </PreLoadContainer>\n        )\n    }\n    \n    return (\n        <Table>\n            <thead>\n                <tr>\n                    {\n                        columns.map((column, idx) => <ThTable key={`th-key-${idx}`}>{column.title}</ThTable>) \n                    }\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    data.map(item => {\n\n                        const itemKey = typeof item === 'object' ? item[dataKey] : item;\n\n                        return (\n                            <TrTable key={`tr-key-${itemKey}`}>\n                                {\n                                    columns.map((column, idx) => <TdTable key={`td-key-${idx}`}>{column.render(item)}</TdTable>)\n                                }\n                            </TrTable>\n                        )\n                    })\n                }\n            </tbody>\n        </Table>\n    )\n}","import styled from 'styled-components';\nimport { DeleteOutlined, BarcodeOutlined } from '@ant-design/icons';\nimport { \n    COLOR_NEUTRAL_BLACK,\n    SPACING_STACK_XXXS,\n    SPACING_STACK_XXS,\n    SPACING_STACK_XS,\n    FONT_SIZE_XS,\n    COLOR_NEUTRAL_DARK,\n    COLOR_NEUTRAL_LIGHTEST,\n    COLOR_NEUTRAL_LIGHT,\n    BORDER_WIDTH_S\n} from 'design-system';\n\nexport const Input = styled.input`\n    padding: 4px 11px;\n    line-height: 1.5715;\n    background-color: ${COLOR_NEUTRAL_LIGHTEST};\n    border: ${BORDER_WIDTH_S}px solid ${COLOR_NEUTRAL_LIGHT};\n    border-radius: 2px;\n    -webkit-transition: all 0.3s;\n    transition: all 0.3s;\n    color: ${COLOR_NEUTRAL_DARK};\n`;\n\nexport const SmallInput = styled(Input)`\n    width: 50%;\n`;\n\nexport const InputGroup = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin: 0px 0px 10px 0px;\n`;\n\nexport const Form = styled.form`\n    text-align: left;\n`;\n\nexport const TextArea = styled.textarea`\n    box-sizing: border-box;\n    width: 100%;\n    padding: 4px 11px;\n    line-height: 1.5715;\n    background-color: ${COLOR_NEUTRAL_LIGHTEST};\n    border: ${BORDER_WIDTH_S}px solid ${COLOR_NEUTRAL_LIGHT};\n    border-radius: 2px;\n    -webkit-transition: all 0.3s;\n    transition: all 0.3s;\n    color: ${COLOR_NEUTRAL_DARK};\n`;\n\nexport const Label = styled.label`\n    color: ${COLOR_NEUTRAL_BLACK};\n    margin-bottom: ${SPACING_STACK_XXXS}px;\n    font-size: ${FONT_SIZE_XS};\n`;\n\nexport const SerialCodeContainer = styled.div`\n    border-top: ${BORDER_WIDTH_S}px solid ${COLOR_NEUTRAL_LIGHT};\n    padding: 10px 0px;\n    margin-top: 15px;\n`;\n\nexport const SerialCodeGroup = styled.div`\n    margin: ${SPACING_STACK_XS}px 0px;\n`;\n\nexport const DeleteIcon = styled(DeleteOutlined)`\n    color: ${COLOR_NEUTRAL_DARK};\n`;\n\nexport const SerialCodeContent = styled.span`\n    margin: ${SPACING_STACK_XXS}px;\n`;\n\nexport const BarCodeIcon = styled(BarcodeOutlined)`\n    font-size: ${FONT_SIZE_XS};\n    margin-right: ${SPACING_STACK_XXXS}px;\n`;","const TOKEN_KEY = '@yTjy57Lj8E/UC9vpLBIv5cMXxWY1xj27ub/D6GavBOw=';\n\nexport const isAuthenticated = () => localStorage.getItem(TOKEN_KEY) !== null;\n\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\n\nexport const login = (token) => {\n  localStorage.setItem(TOKEN_KEY, token);\n};\n\nexport const logout = () => {\n  localStorage.removeItem(TOKEN_KEY);\n};\n","import axios from 'axios';\nimport { getToken } from './auth';\n\n// IP local da máquina na rede\nexport const BASE_URL_API = 'https://qrcodeproductsmanager.herokuapp.com:3333/api/v1';\n\nconst api = axios.create({\n  baseURL: BASE_URL_API,\n});\n\napi.interceptors.request.use(async (config) => {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport default api;\n","import styled from 'styled-components';\nimport { \n    SPACING_STACK_XXS,\n    SPACING_STACK_XXXS,\n    BORDER_RADIUS_M,\n    FONT_SIZE_XXS,\n    COLOR_NEUTRAL_LIGHT,\n    COLOR_SUPORTE_SUCCESS,\n    COLOR_SUPORTE_PRIMARY,\n    BORDER_WIDTH_S,\n    COLOR_NEUTRAL_LIGHTEST,\n    COLOR_NEUTRAL_DARK,\n    COLOR_SUPORTE_SUCCESS_LIGHTEST,\n    COLOR_SUPORTE_PRIMARY_LIGHTEST\n} from 'design-system';\n\nexport const TagDefault = styled.span`\n    background: ${COLOR_NEUTRAL_LIGHTEST};\n    border: ${BORDER_WIDTH_S}px ${COLOR_NEUTRAL_LIGHT} solid; \n    padding: ${SPACING_STACK_XXXS}px ${SPACING_STACK_XXS}px;\n    margin: ${SPACING_STACK_XXXS}px;\n    border-radius: ${BORDER_RADIUS_M}px;\n    font-size: ${FONT_SIZE_XXS};\n    color: ${COLOR_NEUTRAL_DARK};\n`;\n\nexport const TagSuccess = styled(TagDefault)`\n    background: ${COLOR_SUPORTE_SUCCESS_LIGHTEST};\n    color: ${COLOR_SUPORTE_SUCCESS};\n    border: ${BORDER_WIDTH_S}px ${COLOR_SUPORTE_SUCCESS} solid;\n`;\n\nexport const TagPrimary = styled(TagDefault)`\n    background: ${COLOR_SUPORTE_PRIMARY_LIGHTEST};\n    color: ${COLOR_SUPORTE_PRIMARY};\n    border: ${BORDER_WIDTH_S}px ${COLOR_SUPORTE_PRIMARY} solid;\n`;","export const Types = {\n    PRODUCTS: {\n        LOAD: ' PRODUCTS/LOAD',\n        LOAD_SUCCESS: 'PRODUCTS/LOAD/SUCCESS',\n        LOAD_FAILED: 'PRODUCTS/LOAD/FAILED',\n    },\n};\n\nconst initialState = {\n    products: [],\n    loading: false,\n    error: null\n};\n\n// reducers\nexport const productsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case Types.PRODUCTS.LOAD:\n            return {\n                ...state,\n                loading: true,\n            };\n\n        case Types.PRODUCTS.LOAD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                products: action.payload,\n            };\n\n        case Types.PRODUCTS.LOAD_FAILED:\n            return {\n                ...state,\n                loading: false,\n                error: action.error\n            };\n\n        default:\n            return {\n                ...state,\n            };\n    }\n};\n\n// action creators\nexport const loadProducts = () => {\n    return {\n        type: Types.PRODUCTS.LOAD\n    };\n};\n\n// selectors\nexport const getProducts = state => state.productsReducer.products;\n\nexport const isLoading = state => state.productsReducer.loading;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { PlusCircleOutlined } from '@ant-design/icons';\nimport { Alert } from 'design-system/components/Alerts';\nimport {\n    Input,\n    Label,\n    SmallInput,\n    InputGroup,\n    TextArea,\n    Form,\n    SerialCodeContainer,\n    DeleteIcon,\n    SerialCodeContent,\n    BarCodeIcon,\n    SerialCodeGroup\n} from './styles';\nimport Modal from 'design-system/components/Modal';\nimport Api from 'services/api';\nimport { TagDefault } from 'design-system/components/Tag';\nimport { ButtonDefault } from 'design-system/components/Button';\nimport generateSerialCode from 'libs/serialCode';\nimport { loadProducts } from 'redux/reducers/products';\nimport { currencyToFormPtBr, ptBrToCurrencyNumber } from 'utils/currency';\n\n\nfunction ProductFormModal({ handlerVisibility, visible, editValues, titleForm, loadProducts }) {\n\n    const [values, setValues] = useState({});\n    const [loading, setLoading] = useState(false);\n    const [alertInfos, setAlertInfos] = useState({});\n\n    useEffect(() => {\n        if(editValues) {\n            editValues.value = currencyToFormPtBr(editValues.value);\n            setValues(editValues);\n        }\n\n    }, [editValues])\n\n    function changeValues(fieldName, value) {\n        setValues({ ...values, [fieldName]: value });\n    }\n\n    function formateInputValues(inputsValues) {\n        const formatedValues = inputsValues;\n        formatedValues.value = ptBrToCurrencyNumber(inputsValues.value);\n\n        return formatedValues;\n    }\n    \n    async function onSubmit() {\n        setLoading(true);\n\n        const formatedValues = formateInputValues(values);\n        \n        try {\n            await Api.put('/products', formatedValues);\n            \n            loadProducts();\n\n            setLoading(false);\n            handlerVisibility(false);\n            setValues({});\n\n            setAlertInfos({\n                show: true,\n                message: 'Solicitação concluída com sucesso!',\n                type: 'success'\n            });\n            \n\n        } catch(err) {\n            setLoading(false);\n\n            setAlertInfos({\n                show: true,\n                message: 'Erro ao processar solicitação',\n                type: 'error'\n            });\n        }\n    }\n\n    function removeSerial(serial) {\n        const serialCodes = values.serialCodes.filter(serialCode => serialCode !== serial);\n        setValues({ ...values, serialCodes })\n    }\n\n    const addSerialCode = (evt) => {\n        evt.preventDefault();\n        \n        const newCode = generateSerialCode();\n        const serialCodes = values.serialCodes || [];\n        serialCodes.push(newCode);\n\n        setValues({ ...values, serialCodes })\n    }\n\n    return (\n        <>\n            <Modal\n                title={titleForm || \"Novo Produto\"}\n                visible={visible}\n                onOk={onSubmit}\n                onCancel={() => handlerVisibility(false)}\n                okButton=\"Salvar\"\n                cancelButton=\"Cancelar\"\n                loadingButton={loading}\n                >\n                <Form>\n                    <InputGroup>\n                        <Label>Nome</Label>\n                        <Input\n                            onChange={({ target }) => changeValues('name', target.value)}\n                            value={values.name || ''}\n                            />\n                    </InputGroup>\n                    <InputGroup>\n                        <Label>Descrição</Label>\n                        <TextArea\n                            defaultValue={values.description}\n                            onChange={({ target }) => changeValues('description', target.value)}\n                            >\n                            {values.description}\n                        </TextArea>\n                    </InputGroup>\n                    <InputGroup>\n                        <Label>Valor</Label>\n                        <SmallInput\n                            onChange={({ target }) => changeValues('value', target.value)}\n                            value={values.value || ''}\n                            />\n                    </InputGroup>\n                    {\n                        <>\n                        <SerialCodeContainer>\n                            <div>\n                                <Label>\n                                    <BarCodeIcon />Códigos Seriais\n                                </Label>\n                            </div>\n                            <SerialCodeGroup>\n                                {\n                                    values.serialCodes &&\n                                    values.serialCodes.length > 0 && (\n                                        values.serialCodes.map(serial => {\n                                            return (\n                                                <SerialCodeContent key={serial}>\n                                                    <TagDefault>{serial}</TagDefault>\n                                                    <DeleteIcon onClick={() => removeSerial(serial)} />\n                                                </SerialCodeContent>\n                                            )\n                                        })\n                                    )\n                                }\n                            </SerialCodeGroup>\n                        </SerialCodeContainer>\n                        <ButtonDefault onClick={addSerialCode}>\n                            <PlusCircleOutlined />\n                            Gerar código serial\n                        </ButtonDefault>\n                        </>\n                    }\n                </Form >\n            </Modal>\n            <Alert\n                visible={alertInfos.show}\n                type={alertInfos.type || \"\"}\n                message={alertInfos.message}\n                handlerVisibility={() => setAlertInfos({\n                    show: false,\n                    message: '',\n                    type: ''\n                })}\n            />\n        </>\n    )\n}\n\nconst mapStateToProps = null;\n\nconst mapDispatchToProps = (\n    {\n        loadProducts\n    }\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductFormModal);","export const currencyToPtBR = value => (new Intl.NumberFormat('pt-BR',\n    { style: 'currency', currency: 'BRL' })\n    .format(value));\n\nexport const currencyToFormPtBr = (value = \"\") => value.toString().replace(\".\", \",\");\n\nexport const ptBrToCurrencyNumber = (value = \"\") => value.toString().replace(\".\", \"\").replace(\",\", '.')","export default function generateSerialCode() {\n    return Date.now();\n}","import React from 'react';\nimport Modal from 'design-system/components/Modal';\nimport QRCode from 'qrcode.react';\n\nexport default function QRCodeModal({ title, visible, handlerVisibility, value }) {\n    return (\n        <Modal\n            title={title}\n            visible={visible}\n            onCancel={() => handlerVisibility(false)}\n            cancelButton=\"Fechar\"\n        >\n            <QRCode value={value} />\n        </Modal>\n    )\n}","import styled from 'styled-components';\nimport {\n    FONT_SIZE_XS,\n    COLOR_NEUTRAL_DARK\n} from 'design-system';\n\nexport const ProductInfo = styled.div`\n    font-size: ${FONT_SIZE_XS};\n    display: flex;\n    flex-wrap: wrap;\n    color: ${COLOR_NEUTRAL_DARK};\n`;","import React, { useState, useEffect } from 'react';\nimport Api from 'services/api';\nimport Modal from 'design-system/components/Modal';\nimport Table from 'design-system/components/Table';\nimport { dateToPtBR } from 'utils/date';\nimport { ProductInfo } from './styles';\n\n\nexport default function ProducsHistoricModal({ visible, handlerVisibility, product }) {\n    \n    const [isLoading, setLoading] = useState(false);\n    const [productHistorics, setProductHistorics] = useState([]);\n\n    async function fetchProductHistorics() {\n        if (!product) {\n            return;\n        }\n        \n        setLoading(true);\n        const { data } = await Api.get(`/product-logs?productId=${product.id}`);\n\n        setProductHistorics(data);\n        setLoading(false);\n    }\n\n    useEffect(() => {\n        fetchProductHistorics();\n    }, [product]);\n\n    const columns = [\n        {\n            title: 'Usuário',\n            render: historic => <ProductInfo>{historic.userId}</ProductInfo>\n        },\n        {\n            title: 'Código',\n            render: historic => <ProductInfo>{historic.serialCode}</ProductInfo>\n        },\n        {\n            title: 'Data',\n            render: historic => <ProductInfo>{dateToPtBR(historic.date)}</ProductInfo>\n        }\n\n    ]\n    \n    return (\n        <Modal\n            title={`Leituras: ${product.name}`}\n            visible={visible}\n            onCancel={() => handlerVisibility(false)}\n            cancelButton=\"Fechar\"\n            size=\"medium\"\n            >\n                <Table\n                    loading={isLoading}\n                    dataKey=\"id\"\n                    columns={columns}\n                    data={productHistorics}\n                    />\n        </Modal>\n    )\n}","export const dateToPtBR = date => new Date(date).toLocaleString()","import styled from 'styled-components';\nimport { ButtonDefault } from 'design-system/components/Button';\nimport { TagDefault } from 'design-system/components/Tag';\n\nimport {\n    COLOR_NEUTRAL_LIGHT,\n    SPACING_STACK_XS,\n    BORDER_RADIUS_S,\n    FONT_SIZE_S,\n    FONT_SIZE_XS,\n    COLOR_NEUTRAL_WHITE,\n    BORDER_WIDTH_S,\n    BORDER_WIDTH_M,\n} from 'design-system';\n\nexport const TableContainer = styled.div`\n    border: ${BORDER_WIDTH_M}px solid ${COLOR_NEUTRAL_LIGHT};\n    padding: ${SPACING_STACK_XS}px;\n    border-radius: ${BORDER_RADIUS_S}px;\n`;\n\nexport const ProductInfo = styled.div`\n    font-size: ${FONT_SIZE_XS};\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nexport const ProductName = styled(ProductInfo)`\n    font-size: ${FONT_SIZE_S};\n`;\n\nexport const ProductDescription = styled(ProductInfo)`\n    min-width: 300px;\n`;\n\nexport const ContainerButton = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`;\n\nexport const TagSerial = styled(TagDefault)`\n    &:hover {\n        cursor: pointer;\n        opacity: 0.7;\n    }\n`;\n\nexport const Button = styled(ButtonDefault)`\n    margin: 0px 5px;\n    background-color: ${COLOR_NEUTRAL_WHITE};\n    border: ${BORDER_WIDTH_S}px dashed ${COLOR_NEUTRAL_LIGHT};\n`;\n\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Confirm, Alert } from 'design-system/components/Alerts';\nimport {\n    FormOutlined,\n    DeleteOutlined,\n    LineChartOutlined\n} from '@ant-design/icons';\nimport Table from 'design-system/components/Table';\nimport ProductFormModal from 'components/ProductFormModal';\nimport QRCodeModal from 'components/QRCodeModal';\nimport ProductsHistoricModal from 'components/ProductsHistoricModal';\nimport {\n    TableContainer,\n    ProductName,\n    ProductInfo,\n    ContainerButton,\n    Button,\n    ProductDescription,\n    TagSerial\n} from './styles';\nimport { currencyToPtBR } from 'utils/currency';\nimport Api, { BASE_URL_API } from 'services/api';\nimport {\n    loadProducts,\n    isLoading,\n    getProducts\n} from 'redux/reducers/products';\n\nfunction ProductsTable({ loadProducts, products, loading }) {\n\n    const [showFormEditProduct, setShowFormEditProduct] = useState(false);\n    const [showQRCodemodal, setShowQRCodeModal] = useState(false);\n    const [qrCodeModalProduct, setQRCodeModalProduct] = useState({});\n    const [qrCodeModalValue, setQRCodeModalValue] = useState('');\n    const [showModalProductHistoric, setShowModalProductHistoric] = useState(false);\n    const [historicModalProduct, setHistoricModalProduct] = useState({});\n    const [formEditValues, setFormEditValues] = useState({});\n    const [confirmModal, setConfirmModal] = useState({});\n    const [alertInfos, setAlertInfos] = useState({});\n\n    useEffect(() => {\n        loadProducts();\n    }, [loadProducts]);\n\n    function handleEditProduct(product) {\n        setShowFormEditProduct(true);\n        setFormEditValues(product);\n    }\n\n    function handlerVisibilityEditProduct() {\n        setShowFormEditProduct(false);\n        setFormEditValues({});\n        setQRCodeModalValue('');\n    }\n\n    function handlerQRCodeModal(product, serial) {\n        setShowQRCodeModal(true)\n        setQRCodeModalProduct(product);\n        setQRCodeModalValue(`${BASE_URL_API}/products?serialCode=${serial}`)\n\n    }\n\n    function handleHistoricProduct(product) {\n        setShowModalProductHistoric(true);\n        setHistoricModalProduct(product);\n    }\n\n    async function onConfirmDeleteProduct(product) {\n        \n        // Essa indecência foi preciso porque fiz uma tentativa de deixar o Modal de Confirmação genérico, para reuso futuro nessa tela\n        // Pelo fato de adicionar a função de callback dentro do state, ele perde as referências.\n        // #Ponto de melhoria\n        setConfirmModal({\n            show: true,\n            message: 'Excluir o item?',\n            onConfirm: () => false,\n            loading: true\n        });\n\n        try {\n            \n            await Api.delete(`/products/${product.id}`);\n\n            loadProducts();\n\n            setConfirmModal({\n                show: false,\n            });\n    \n            setAlertInfos({\n                show: true,\n                message: 'Solicitação concluída com sucesso!',\n                type: 'success'\n            });\n            \n        } catch(err) {\n            setConfirmModal({\n                show: false,\n            });\n    \n            setAlertInfos({\n                show: true,\n                message: 'Erro ao processar solicitação!',\n                type: 'error'\n            });\n        }\n    }\n\n    function handleDeleteProduct(product) {\n        setConfirmModal({\n            show: true,\n            message: 'Excluir o item?',\n            onConfirm: () => onConfirmDeleteProduct(product)\n        })\n    }\n\n    const columns = [\n        {\n            title: 'Produto',\n            render: product => <ProductName>{product.name}</ProductName>\n        },\n        {\n            title: 'Descrição',\n            render: product => <ProductDescription>{product.description}</ProductDescription>\n        },\n        {\n            title: 'Valor',\n            render: product => <ProductInfo>{currencyToPtBR(product.value)}</ProductInfo>\n        },\n        {\n            title: 'Serial',\n            render: product => {\n                return (\n                    <ProductInfo>\n                        {product.serialCodes.map(serial => {\n                            return (\n                                <TagSerial\n                                    key={serial}\n                                    onClick={() => handlerQRCodeModal(product, serial)}\n                                    title=\"Clique para ver o QRCode\"\n                                >\n                                    {serial}\n                                </TagSerial>\n                            )\n                        })}\n                    </ProductInfo>\n                )\n            }\n        },\n        {\n            title: '',\n            render: (product) => (\n                <ContainerButton>\n                    <Button onClick={() => handleHistoricProduct(product)}>\n                        <LineChartOutlined />\n                        Leituras\n                    </Button>\n                    <Button onClick={() => handleEditProduct(product)}>\n                        <FormOutlined />\n                        Editar\n                    </Button>\n                    <Button onClick={() => handleDeleteProduct(product)}>\n                        <DeleteOutlined />\n                        Remover\n                    </Button>\n                </ContainerButton>\n            )\n        }\n    ];\n\n    return (\n        <TableContainer>\n            <Table\n                loading={loading}\n                dataKey=\"id\"\n                columns={columns}\n                data={products}\n                />\n            <ProductFormModal\n                titleForm=\"Editar Produto\"\n                editValues={formEditValues}\n                visible={showFormEditProduct}\n                handlerVisibility={handlerVisibilityEditProduct}\n                />\n            <QRCodeModal\n                title={qrCodeModalProduct.name}\n                value={qrCodeModalValue}\n                visible={showQRCodemodal}\n                handlerVisibility={setShowQRCodeModal}\n            />\n            <Confirm\n                visible={confirmModal.show}\n                onConfirm={confirmModal.onConfirm}\n                handlerVisibility={() => {\n                    setConfirmModal({\n                        message: '',\n                        show: false,\n                        onConfirm: null\n                    })\n                }}\n                message={confirmModal.message}\n                loading={confirmModal.loading}\n            />\n            <Alert\n                visible={alertInfos.show}\n                type={alertInfos.type || \"\"}\n                message={alertInfos.message}\n                handlerVisibility={() => setAlertInfos({\n                    show: false,\n                    message: '',\n                    type: ''\n                })}\n            />\n            <ProductsHistoricModal\n                visible={showModalProductHistoric}\n                handlerVisibility={(flag) => setShowModalProductHistoric(flag)}\n                product={historicModalProduct}\n            />\n        </TableContainer>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        products: getProducts(state),\n        loading: isLoading(state),\n    };\n};\n\nconst mapDispatchToProps = (\n    {\n        loadProducts\n    }\n)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsTable);","import React, { useState } from 'react';\nimport {\n    PlusCircleOutlined\n} from '@ant-design/icons';\nimport { ButtonPrimary } from 'design-system/components/Button';\nimport {\n    Container,\n    ContainerButton,\n} from './styles';\nimport ProductsTable from 'components/ProductsTable';\nimport ProductFormModal from 'components/ProductFormModal';\n\nexport default function Dashboard() {\n\n    const [showFormNewProduct, setShowFormNewProduct] = useState(false);\n\n    function handleVisibilityFormNewProduct(visibility) {\n        setShowFormNewProduct(visibility)\n    }\n\n    return (\n        <Container>\n            <h2>Painel Adm</h2>\n            <ProductsTable />\n            <ContainerButton>\n                <ButtonPrimary\n                    onClick={() => handleVisibilityFormNewProduct(true)}\n                    >\n                    <PlusCircleOutlined />\n                    Novo produto\n                </ButtonPrimary>\n            </ContainerButton>\n            <ProductFormModal\n                visible={showFormNewProduct}\n                handlerVisibility={handleVisibilityFormNewProduct}\n                />\n        </Container>\n    )\n}","import styled from 'styled-components';\nimport {\n    SPACING_STACK_M\n} from 'design-system';\n\nexport const Container = styled.div`\n    width: 100%;\n    padding: 0px ${SPACING_STACK_M}px;\n    min-height: 80vh;\n`;","import styled from 'styled-components';\nimport {\n    BORDER_WIDTH_M,\n    COLOR_NEUTRAL_LIGHT,\n    BORDER_RADIUS_S,\n    SPACING_STACK_XS\n} from 'design-system';\n\nexport const TableContainer = styled.div`\n    border: ${BORDER_WIDTH_M}px solid ${COLOR_NEUTRAL_LIGHT};\n    padding: ${SPACING_STACK_XS}px;\n    border-radius: ${BORDER_RADIUS_S}px;\n`;\n\nexport const QRCodeInfo = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    padding: ${SPACING_STACK_XS}px 0px;\n`;\n\nexport const SerialCodeInfo = styled.div`\n    margin-top: ${SPACING_STACK_XS}px;\n`;","import React, { useEffect, useState } from 'react';\nimport QRCode from 'qrcode.react';\nimport {\n    TableContainer,\n    QRCodeInfo,\n    SerialCodeInfo\n} from './style';\nimport Table from 'design-system/components/Table';\nimport Api, { BASE_URL_API } from 'services/api';\n\nexport default function ProductsQRCodeTable() {\n\n    const [serialCodes, setSerialCodes] = useState([]);\n    const [loadingProducts, setLoadingProducts] = useState(false);\n\n    async function fetchProducts() {\n        setLoadingProducts(true);\n        const { data } = await Api.get('/products');\n\n        const sCodes = data.flatMap(product => product.serialCodes);\n\n        setSerialCodes(sCodes);\n        setLoadingProducts(false);\n    }\n\n    useEffect(() => {\n        fetchProducts();\n    }, []);\n\n    const columns = [\n        {\n            title: 'Produto',\n            render: serialCode => (\n                <QRCodeInfo>\n                    <QRCode value={`${BASE_URL_API}/products?serialCode=${serialCode}`} />\n                    <SerialCodeInfo>{serialCode}</SerialCodeInfo>\n                </QRCodeInfo>\n            )\n        }\n    ];\n\n    return (\n        <TableContainer>\n            <Table\n                loading={loadingProducts}\n                columns={columns}\n                data={serialCodes}\n            />\n        </TableContainer>\n    )\n}","import React from 'react';\nimport { Container } from './styles';\nimport ProductsQRCodeTable from 'components/ProductsQRCodeTable';\n\nexport default function Products() {\n    return (\n        <Container>\n            <h2>Lista de Produtos</h2>\n            <ProductsQRCodeTable/>\n        </Container>\n    )\n}","import React from \"react\";\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Dashboard from 'pages/dashboard';\nimport Product from 'pages/products';\n\nexport default function Routes() {\n    return (\n        <Switch>\n            <Route path=\"/\" exact component={Dashboard} />\n            <Route path=\"/products\" component={Product} />\n        </Switch>\n    )\n}","import { combineReducers } from 'redux';\nimport { productsReducer } from './products';\n\nexport default combineReducers({\n    productsReducer,\n});","import { takeLatest, call, put } from 'redux-saga/effects';\nimport Api from 'services/api';\nimport { Types } from '../reducers/products';\n\nconst { PRODUCTS } = Types;\n\nfunction* fetchProducts() {\n    try {\n        const result = yield call(Api.get, '/products');\n        yield put({ type: PRODUCTS.LOAD_SUCCESS, payload: result.data });\n    } catch (e) {\n        yield put({ type: PRODUCTS.LOAD_FAILED, error: 'Não foi possível processar a solicitação' });\n    }\n}\n\nexport default function* sagasProducts() {\n    yield takeLatest(PRODUCTS.LOAD, fetchProducts);\n}","import { fork, all } from 'redux-saga/effects';\nimport sagasProducts from './products';\n\nexport default function* rootSaga() {\n    yield all([\n        fork(sagasProducts),\n    ]);\n}","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducers from '../redux/reducers';\nimport rootSagas from '../redux/sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducers, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSagas);\n\nexport default store;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Header from 'components/Header';\nimport Routes from './router';\nimport store from 'config/redux';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Header />\n        <div className=\"container-app\">\n          <Routes />\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}